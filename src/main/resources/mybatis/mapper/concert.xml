<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.mbcit.vivere.dao.ConcertDAO">

	<!-- select -->
	<select id="getConcertById" parameterType="int" resultType="concertVO">
		select * from concert where id = ${id}
	</select>
	
	<select id="selectByPosterUrl" parameterType="String" resultType="concertVO">
		select * from concert where posterUrl = #{posterUrl} ORDER BY id DESC limit 1 
	</select>
	
	<select id="getConcertTimes" parameterType="int" resultType="concertTimeVO">
		select conT.* from concertTime conT join concert con on conT.concertId = con.id
		where con.id = #{id} order by concertTime asc
	</select>
	
	<select id="getConcertListByTime" resultType="concertVO">
		SELECT DISTINCT c.*
		FROM concert c
		JOIN concertTime ct ON c.id = ct.concertId
		WHERE ct.concertTime > NOW();
	</select>
	
	<select id="getConcertListByTimeAndCategoryId" parameterType="int" resultType="concertVO">
		SELECT DISTINCT c.*
		FROM concert c
		JOIN concertTime ct ON c.id = ct.concertId
		WHERE ct.concertTime > NOW()
		AND c.categoryId = #{categoryId};
	</select>
	
	<select id="getConcertTimeByConcertIdAndTime" parameterType="concertTimeVO" resultType="concertTimeVO">
		select * from concertTime where concertId = #{concertId} AND concertTime = #{concertTime}
	</select>
	
	<select id="getConcertTimeById" parameterType="int" resultType="concertTimeVO">
		select * from concertTime where id = #{id}
	</select>	
	
	<select id="getConcertTimeIdByConcertId" parameterType="int" resultType="int">
		SELECT id FROM concertTime WHERE concertId = #{concertId} LIMIT 1
	</select>	
	
	<select id="getConcertSeatListByGrade" parameterType="concertSeatVO" resultType="concertSeatVO">
		SELECT * FROM concertseat WHERE concertId = #{concertId} AND concertTimeId = #{concertTimeId} AND grade = #{grade}
	</select>	
	
	<select id="getGrade" parameterType="concertSeatVO" resultType="String">
		select grade 
		from concertSeat 
		where concertId = #{concertId} 
		and lineNum = #{lineNum} 
		and seatNum = #{seatNum} 
		limit 1
	</select>	

	<select id="getCarouselByConcertId" parameterType="int" resultType="carouselVO">
		select * from carousel where concertId = #{concertId}
	</select>	
	
	<select id="getCarouselListByStatus" resultType="carouselVO">
		select * from carousel where status = 1
	</select>	
	

	<!-- insert  -->
	<insert id="insert" parameterType="concertVO">
		insert into concert (title, hallType, description, categoryId, totalSeat, posterUrl, priceVIP,
			priceR, priceS, priceA, countVIP, countR, countS, countA, createDate, equalPrice)
		values (#{title}, #{hallType}, #{description}, #{categoryId}, #{totalSeat}, #{posterUrl}, #{priceVIP},
			#{priceR}, #{priceS}, #{priceA}, #{countVIP}, #{countR}, #{countS}, #{countA}, now(), #{equalPrice})
	</insert>
	
	<insert id="insertConcertTime" parameterType="concertTimeVO">
		insert into concertTime (concertId, concertTime) values (#{concertId}, #{concertTime}) 
	</insert>
	
	<insert id="insertConcertSeat" parameterType="concertSeatVO">
		insert into concertSeat (concertId, concertTimeId, lineNum, seatNum, grade,	bookYN)
		values (#{concertId}, #{concertTimeId}, #{lineNum}, #{seatNum}, #{grade}, false)
	</insert>
	
	<insert id="insertCarousel" parameterType="carouselVO">
		insert into carousel (concertId, carouselUrl) values (#{concertId}, #{carouselUrl})
	</insert>
	
	<!-- update -->
	<update id="updateConcertTime" parameterType="concertTimeVO">
		update concertTime set concertTime = #{concertTime} where id = #{id}
	</update>
	
	<update id="updateWithoutPoster" parameterType="concertVO">
		update concert set title = #{title}, hallType = #{hallType}, description = #{description}, categoryId = #{categoryId}, 
			totalSeat =#{totalSeat}, priceVIP = #{priceVIP}, priceR = #{priceR}, priceS = #{priceS}, priceA = #{priceA}, 
			countVIP = #{countVIP}, countR = #{countR}, countS = #{countS},countA = #{countA}, equalPrice = #{equalPrice},
			updateDate = now()
		where id = #{id}
	</update>
	
	<update id="update" parameterType="concertVO">
		update concert set title = #{title}, hallType = #{hallType}, description = #{description}, categoryId = #{categoryId}, 
			totalSeat =#{totalSeat}, priceVIP = #{priceVIP}, priceR = #{priceR}, priceS = #{priceS}, priceA = #{priceA}, 
			countVIP = #{countVIP}, countR = #{countR}, countS = #{countS},countA = #{countA}, equalPrice = #{equalPrice},
			updateDate = now(), posterUrl = #{posterUrl}
		where id = #{id}
	</update>
	
	<update id="updateBookYN" parameterType="concertSeatVO">
		update concertSeat 
		set bookYN = true
		where concertId = #{concertId} 
		and concertTimeId = #{concertTimeId} 
		and lineNum = #{lineNum} 
		and seatNum = #{seatNum}
	</update>
	
	<update id="updateCarouselUrl" parameterType="carouselVO">
		update carousel 
		set carouselUrl = #{carouselUrl}
		where concertId = #{concertId} 
	</update>

	<!-- delete -->
	<delete id="deleteConcert" parameterType="int">
		DELETE FROM concert WHERE id = #{concertId}
	</delete>
	
	<delete id="deleteConcertTimesByConcertId" parameterType="int">
		DELETE FROM concerttime WHERE concertId = #{concertId}
	</delete>
	<delete id="deleteConcertTimeById" parameterType="int">
		DELETE FROM concerttime WHERE id = #{concertTimeId}
	</delete>
	
	<delete id="deleteConcertSeatsByConcertId" parameterType="int">
		DELETE FROM concertseat WHERE concertId = #{concertId}
	</delete>
	<delete id="deleteConcertSeatsByConcertTimeId" parameterType="int">
		DELETE FROM concertseat WHERE concertTimeId = #{concertTimeId}
	</delete>

</mapper>





